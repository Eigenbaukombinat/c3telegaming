;[default]
;route caller with number to hotline script
;${caller}^+\?[0-9]*$=external/nodata/hotline.tcl
;fallback routing for anonymous calls - otherwise there is no way to call back
;.*=sip/fallbacknumber;line=epvpn

[default]
;route caller with number to hotline script
;phony client
${caller}^+\?[0-9]*$=external/nodata/phony.py
;${caller}^+\?[0-9]*$=conf/game;lonely=true;maxusers=50
;${caller}^+\?[0-9]*$=tone/ring
;${caller}^2815$=sip/6757

;fallback routing for anonymous calls - otherwise there is no way to call back
.*=sip/6757;line=epvpn


#https://docs.yate.ro/wiki/Conference_room_module
# $m = new Yate("chan.masquerade");
# $m->id = "";
# $m->params["message"] = "call.execute";
# $m->params["id"] = $partycallid;
# $m->params["callto"] = "conf/cs-$conference_id";
# $m->params["notify"] = "conf-monitor/cs-$conference_id";
# $m->params["billing"] = "true";
# $m->params["lonely"] = "true";
# $m->params["maxusers"] = $maxusers;
# $m->params["smart"] = "t";
#
# if ($is_organizer == "1") {
#     $m->params["record"] = "external/nodata/conference.php";
#     // set this so that script can play warnings in conference
#     $m->params["recordwarn"] = "-";
#     $m->params["speakers"] = $speakers;
#     $m->params["interval"] = $interval_notifications;
#     $m->params["waitlock"] = -200;
# } else {
#     $m->params["existing"] = "t";
# }
# $m->Dispatch();
